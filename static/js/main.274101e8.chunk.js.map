{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.274101e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"50bb26a84e5e7b9074a6da4f64881c1b\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", { params: { query: encodeURIComponent(term) } })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", { params: { query: encodeURIComponent(term) } })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying } // Change name of variable to nowPlaying\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find shows information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0%;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text=\"Nothing Found\" color=\"#95a5a6\"></Message>\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { tvApi, moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route\n          path=\"https://mondaoporosis.github.io/nomflix/\"\n          exact\n          component={Home}\n        />\n        <Route\n          path=\"https://mondaoporosis.github.io/nomflix/tv\"\n          exact\n          component={TV}\n        />\n        <Route\n          path=\"https://mondaoporosis.github.io/nomflix/search\"\n          exact\n          component={Search}\n        />\n        <Route\n          path=\"https://mondaoporosis.github.io/nomflix/movie/:id\"\n          component={Detail}\n        ></Route>\n        <Route\n          path=\"https://mondaoporosis.github.io/nomflix/show/:id\"\n          component={Detail}\n        ></Route>\n        <Redirect from=\"*\" to=\"/\" />\n        {/* if none of them match, go to home */}\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`${reset};\na{\n    text-decoration: none;\n    color: inherit;\n}\n*{\n    box-sizing: border-box;\n}\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n}`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}